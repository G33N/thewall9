{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EpisodeService {\n  httpClient;\n  SINGLE_EPISODE_API = 'https://rickandmortyapi.com/api/episode/';\n  ALL_EPISODE_API = 'https://rickandmortyapi.com/api/episode/?page=';\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getEpisodeById(id) {\n    return this.httpClient.get(this.SINGLE_EPISODE_API + id);\n  }\n  getEpisodesrByURL(url) {\n    return this.httpClient.get(url);\n  }\n  getEpisodes(page) {\n    return this.httpClient.get(this.ALL_EPISODE_API + page);\n  }\n  static ɵfac = function EpisodeService_Factory(t) {\n    return new (t || EpisodeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EpisodeService,\n    factory: EpisodeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EpisodeService","httpClient","SINGLE_EPISODE_API","ALL_EPISODE_API","constructor","getEpisodeById","id","get","getEpisodesrByURL","url","getEpisodes","page","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/geen/Documents/personal/challenge-thewall9/frontend/src/app/episode/episode.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Episode } from './episode.model'\nimport { Info } from '../common/common.model'\nimport { Observable } from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EpisodeService {\n  private readonly SINGLE_EPISODE_API =\n    'https://rickandmortyapi.com/api/episode/'\n\n  private readonly ALL_EPISODE_API =\n    'https://rickandmortyapi.com/api/episode/?page='\n\n  constructor(private readonly httpClient: HttpClient) {}\n\n  public getEpisodeById(id: string): Observable<Episode> {\n    return this.httpClient.get<Episode>(this.SINGLE_EPISODE_API + id)\n  }\n\n  public getEpisodesrByURL(url: string): Observable<Episode> {\n    return this.httpClient.get<Episode>(url)\n  }\n\n  public getEpisodes(page: string): Observable<Info<Episode[]>> {\n    return this.httpClient.get<Info<Episode[]>>(this.ALL_EPISODE_API + page)\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,cAAc;EAOIC,UAAA;EANZC,kBAAkB,GACjC,0CAA0C;EAE3BC,eAAe,GAC9B,gDAAgD;EAElDC,YAA6BH,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAE/CI,cAAcA,CAACC,EAAU;IAC9B,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAU,IAAI,CAACL,kBAAkB,GAAGI,EAAE,CAAC;EACnE;EAEOE,iBAAiBA,CAACC,GAAW;IAClC,OAAO,IAAI,CAACR,UAAU,CAACM,GAAG,CAAUE,GAAG,CAAC;EAC1C;EAEOC,WAAWA,CAACC,IAAY;IAC7B,OAAO,IAAI,CAACV,UAAU,CAACM,GAAG,CAAkB,IAAI,CAACJ,eAAe,GAAGQ,IAAI,CAAC;EAC1E;;qBAnBWX,cAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;WAAdf,cAAc;IAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}