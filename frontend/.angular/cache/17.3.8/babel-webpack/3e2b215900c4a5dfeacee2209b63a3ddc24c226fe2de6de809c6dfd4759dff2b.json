{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { Validators } from \"@angular/forms\";\nlet CharacterCreateFormComponent = class CharacterCreateFormComponent {\n  fb;\n  characterForm;\n  constructor(fb) {\n    this.fb = fb;\n    this.characterForm = this.fb.group({\n      status: [\"\", Validators.required],\n      species: [\"\", Validators.required],\n      type: [\"\", Validators.required],\n      gender: [\"\", Validators.required],\n      origin: this.fb.group({\n        name: [\"\"],\n        url: [\"\"]\n      }),\n      location: this.fb.group({\n        name: [\"\"],\n        url: [\"\"]\n      }),\n      episode: this.fb.array([])\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    if (this.characterForm.valid) {\n      const updatedCharacter = this.characterForm.value;\n      // Handle form submission, e.g., send updatedCharacter to a service\n    }\n  }\n  addEpisode(episode) {\n    this.episodeArray.push(this.fb.control(episode));\n  }\n  removeEpisode(index) {\n    this.episodeArray.removeAt(index);\n  }\n  get episodeArray() {\n    return this.characterForm.get(\"episode\");\n  }\n};\nCharacterCreateFormComponent = __decorate([Component({\n  selector: \"app-character-create-form\",\n  templateUrl: \"./character-create-form.component.html\"\n})], CharacterCreateFormComponent);\nexport { CharacterCreateFormComponent };","map":{"version":3,"names":["Component","Validators","CharacterCreateFormComponent","fb","characterForm","constructor","group","status","required","species","type","gender","origin","name","url","location","episode","array","ngOnInit","onSubmit","valid","updatedCharacter","value","addEpisode","episodeArray","push","control","removeEpisode","index","removeAt","get","__decorate","selector","templateUrl"],"sources":["/Users/geen/Documents/personal/challenge-thewall9/frontend/src/app/character-create/character-create-form/character-create-form.component.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Character } from \"src/app/character/character.model\";\n\n@Component({\n  selector: \"app-character-create-form\",\n  templateUrl: \"./character-create-form.component.html\",\n})\nexport class CharacterCreateFormComponent {\n  characterForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.characterForm = this.fb.group({\n      status: [\"\", Validators.required],\n      species: [\"\", Validators.required],\n      type: [\"\", Validators.required],\n      gender: [\"\", Validators.required],\n      origin: this.fb.group({\n        name: [\"\"],\n        url: [\"\"],\n      }),\n      location: this.fb.group({\n        name: [\"\"],\n        url: [\"\"],\n      }),\n      episode: this.fb.array([]),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit(): void {\n    if (this.characterForm.valid) {\n      const updatedCharacter: Character = this.characterForm.value;\n      // Handle form submission, e.g., send updatedCharacter to a service\n    }\n  }\n\n  addEpisode(episode: string): void {\n    this.episodeArray.push(this.fb.control(episode));\n  }\n\n  removeEpisode(index: number): void {\n    this.episodeArray.removeAt(index);\n  }\n\n  get episodeArray() {\n    return this.characterForm.get(\"episode\") as FormArray;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAA4CC,UAAU,QAAQ,gBAAgB;AAOvE,IAAMC,4BAA4B,GAAlC,MAAMA,4BAA4B;EAGnBC,EAAA;EAFpBC,aAAa;EAEbC,YAAoBF,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IACpB,IAAI,CAACC,aAAa,GAAG,IAAI,CAACD,EAAE,CAACG,KAAK,CAAC;MACjCC,MAAM,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACO,QAAQ,CAAC;MACjCC,OAAO,EAAE,CAAC,EAAE,EAAER,UAAU,CAACO,QAAQ,CAAC;MAClCE,IAAI,EAAE,CAAC,EAAE,EAAET,UAAU,CAACO,QAAQ,CAAC;MAC/BG,MAAM,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACO,QAAQ,CAAC;MACjCI,MAAM,EAAE,IAAI,CAACT,EAAE,CAACG,KAAK,CAAC;QACpBO,IAAI,EAAE,CAAC,EAAE,CAAC;QACVC,GAAG,EAAE,CAAC,EAAE;OACT,CAAC;MACFC,QAAQ,EAAE,IAAI,CAACZ,EAAE,CAACG,KAAK,CAAC;QACtBO,IAAI,EAAE,CAAC,EAAE,CAAC;QACVC,GAAG,EAAE,CAAC,EAAE;OACT,CAAC;MACFE,OAAO,EAAE,IAAI,CAACb,EAAE,CAACc,KAAK,CAAC,EAAE;KAC1B,CAAC;EACJ;EAEAC,QAAQA,CAAA,GAAU;EAElBC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACf,aAAa,CAACgB,KAAK,EAAE;MAC5B,MAAMC,gBAAgB,GAAc,IAAI,CAACjB,aAAa,CAACkB,KAAK;MAC5D;IACF;EACF;EAEAC,UAAUA,CAACP,OAAe;IACxB,IAAI,CAACQ,YAAY,CAACC,IAAI,CAAC,IAAI,CAACtB,EAAE,CAACuB,OAAO,CAACV,OAAO,CAAC,CAAC;EAClD;EAEAW,aAAaA,CAACC,KAAa;IACzB,IAAI,CAACJ,YAAY,CAACK,QAAQ,CAACD,KAAK,CAAC;EACnC;EAEA,IAAIJ,YAAYA,CAAA;IACd,OAAO,IAAI,CAACpB,aAAa,CAAC0B,GAAG,CAAC,SAAS,CAAc;EACvD;CACD;AAzCY5B,4BAA4B,GAAA6B,UAAA,EAJxC/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,2BAA2B;EACrCC,WAAW,EAAE;CACd,CAAC,C,EACW/B,4BAA4B,CAyCxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}