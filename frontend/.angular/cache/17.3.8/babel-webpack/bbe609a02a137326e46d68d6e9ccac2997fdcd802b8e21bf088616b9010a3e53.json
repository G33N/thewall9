{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CharacterService {\n  httpClient;\n  CHARACTER_PAGE_API = \"https://5vue77teib.execute-api.us-east-1.amazonaws.com/dev/character?page=\";\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getCharacterByURL(url) {\n    const headers = new HttpHeaders().set(\"x-api-key\", \"WeRAh6pQBZ3woFt3VSeWWasRfi8EIJqu3DHtRo4P\");\n    return this.httpClient.get(url, {\n      headers: headers\n    });\n  }\n  getCharacters(page) {\n    return this.httpClient.get(this.CHARACTER_PAGE_API + page);\n  }\n  static ɵfac = function CharacterService_Factory(t) {\n    return new (t || CharacterService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CharacterService,\n    factory: CharacterService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["HttpHeaders","CharacterService","httpClient","CHARACTER_PAGE_API","constructor","getCharacterByURL","url","headers","set","get","getCharacters","page","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/geen/Documents/personal/challenge-thewall9/frontend/src/app/character/character.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Character } from \"./character.model\";\nimport { Info } from \"../common/common.model\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CharacterService {\n  private readonly CHARACTER_PAGE_API =\n    \"https://5vue77teib.execute-api.us-east-1.amazonaws.com/dev/character?page=\";\n\n  constructor(private readonly httpClient: HttpClient) {}\n\n  public getCharacterByURL(url: string): Observable<Character> {\n    const headers = new HttpHeaders().set(\n      \"x-api-key\",\n      \"WeRAh6pQBZ3woFt3VSeWWasRfi8EIJqu3DHtRo4P\"\n    );\n\n    return this.httpClient.get<Character>(url, { headers: headers });\n  }\n\n  public getCharacters(page: string): Observable<Info<Character[]>> {\n    return this.httpClient.get<Info<Character[]>>(\n      this.CHARACTER_PAGE_API + page\n    );\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,gBAAgB;EAIEC,UAAA;EAHZC,kBAAkB,GACjC,4EAA4E;EAE9EC,YAA6BF,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAE/CG,iBAAiBA,CAACC,GAAW;IAClC,MAAMC,OAAO,GAAG,IAAIP,WAAW,EAAE,CAACQ,GAAG,CACnC,WAAW,EACX,0CAA0C,CAC3C;IAED,OAAO,IAAI,CAACN,UAAU,CAACO,GAAG,CAAYH,GAAG,EAAE;MAAEC,OAAO,EAAEA;IAAO,CAAE,CAAC;EAClE;EAEOG,aAAaA,CAACC,IAAY;IAC/B,OAAO,IAAI,CAACT,UAAU,CAACO,GAAG,CACxB,IAAI,CAACN,kBAAkB,GAAGQ,IAAI,CAC/B;EACH;;qBAnBWV,gBAAgB,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;WAAhBd,gBAAgB;IAAAe,OAAA,EAAhBf,gBAAgB,CAAAgB,IAAA;IAAAC,UAAA,EAFf;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}